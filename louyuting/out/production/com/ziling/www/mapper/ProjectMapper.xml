<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ziling.www.mapper.ProjectMapper" >
  <resultMap id="BaseResultMap" type="com.ziling.www.po.Project" >
    <id column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="VARCHAR" />
    <result column="project_num" property="projectNum" jdbcType="VARCHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="accepted_time" property="acceptedTime" jdbcType="TIMESTAMP" />
    <result column="ended_time" property="endedTime" jdbcType="TIMESTAMP" />
    <result column="project_status" property="projectStatus" jdbcType="INTEGER" />
    <result column="budget" property="budget" jdbcType="INTEGER" />
    <result column="skill_required" property="skillRequired" jdbcType="VARCHAR" />
    <result column="delivery_time" property="deliveryTime" jdbcType="TIMESTAMP" />
    <result column="develop_cycle" property="developCycle" jdbcType="INTEGER" />
    <result column="contact_people" property="contactPeople" jdbcType="VARCHAR" />
    <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
    <result column="deposit_money" property="depositMoney" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="progress" property="progress" jdbcType="INTEGER" />
    <result column="need_bill" property="needBill" jdbcType="INTEGER" />
    <result column="is_payed" property="isPayed" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="bak_1" property="bak1" jdbcType="VARCHAR" />
    <result column="bak_2" property="bak2" jdbcType="VARCHAR" />
    <result column="bak_3" property="bak3" jdbcType="INTEGER" />
  </resultMap>


    <!-- == 分割线   ====================================================================================== -->
    <!-- ==自定义查询语句=============================================================================================== -->
    <resultMap type="com.ziling.www.po.Project" id="selectProjectAndPictureCustomResultMap" extends="BaseResultMap">
        <collection property="pictureList" ofType="com.ziling.www.po.ProjectPicture">
            <id column="picture_id" property="pictureId"/>
            <result column="picture_url" property="pictureUrl"/>
        </collection>
    </resultMap>

    <select id="selectProjectAndMainPictureCustom" resultMap="selectProjectAndPictureCustomResultMap" parameterType="com.ziling.www.po.ProjectExample">
        select
        project.*,
        project_picture.picture_id as picture_id,
        project_picture.picture_url as picture_url
        from
        project,
        project_picture
        <!-- where
            project.project_id = project_picture.project_id AND project_picture.main_picture = 1 -->
    </select>
    <!-- ==end of 自定义查询语句====================================================================================== -->
    <!-- == 分割线   ====================================================================================== -->


    <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="netty.example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    project_id, company_id, user_id, category_id, project_num, project_name, created_time, 
    updated_time, accepted_time, ended_time, project_status, budget, skill_required, 
    delivery_time, develop_cycle, contact_people, img_url, deposit_money, description, 
    progress, need_bill, is_payed, remark, bak_1, bak_2, bak_3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ziling.www.po.ProjectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from project
    where project_id = #{projectId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from project
    where project_id = #{projectId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ziling.www.po.ProjectExample" >
    delete from project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ziling.www.po.Project" >
    insert into project (project_id, company_id, user_id, 
      category_id, project_num, project_name, 
      created_time, updated_time, accepted_time, 
      ended_time, project_status, budget, 
      skill_required, delivery_time, develop_cycle, 
      contact_people, img_url, deposit_money, 
      description, progress, need_bill, 
      is_payed, remark, bak_1, 
      bak_2, bak_3)
    values (#{projectId,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=VARCHAR}, #{projectNum,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{acceptedTime,jdbcType=TIMESTAMP}, 
      #{endedTime,jdbcType=TIMESTAMP}, #{projectStatus,jdbcType=INTEGER}, #{budget,jdbcType=INTEGER}, 
      #{skillRequired,jdbcType=VARCHAR}, #{deliveryTime,jdbcType=TIMESTAMP}, #{developCycle,jdbcType=INTEGER}, 
      #{contactPeople,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, #{depositMoney,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{progress,jdbcType=INTEGER}, #{needBill,jdbcType=INTEGER}, 
      #{isPayed,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{bak1,jdbcType=VARCHAR}, 
      #{bak2,jdbcType=VARCHAR}, #{bak3,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ziling.www.po.Project" >
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="projectNum != null" >
        project_num,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="acceptedTime != null" >
        accepted_time,
      </if>
      <if test="endedTime != null" >
        ended_time,
      </if>
      <if test="projectStatus != null" >
        project_status,
      </if>
      <if test="budget != null" >
        budget,
      </if>
      <if test="skillRequired != null" >
        skill_required,
      </if>
      <if test="deliveryTime != null" >
        delivery_time,
      </if>
      <if test="developCycle != null" >
        develop_cycle,
      </if>
      <if test="contactPeople != null" >
        contact_people,
      </if>
      <if test="imgUrl != null" >
        img_url,
      </if>
      <if test="depositMoney != null" >
        deposit_money,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="progress != null" >
        progress,
      </if>
      <if test="needBill != null" >
        need_bill,
      </if>
      <if test="isPayed != null" >
        is_payed,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="bak1 != null" >
        bak_1,
      </if>
      <if test="bak2 != null" >
        bak_2,
      </if>
      <if test="bak3 != null" >
        bak_3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="projectNum != null" >
        #{projectNum,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptedTime != null" >
        #{acceptedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endedTime != null" >
        #{endedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectStatus != null" >
        #{projectStatus,jdbcType=INTEGER},
      </if>
      <if test="budget != null" >
        #{budget,jdbcType=INTEGER},
      </if>
      <if test="skillRequired != null" >
        #{skillRequired,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTime != null" >
        #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="developCycle != null" >
        #{developCycle,jdbcType=INTEGER},
      </if>
      <if test="contactPeople != null" >
        #{contactPeople,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null" >
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="depositMoney != null" >
        #{depositMoney,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="progress != null" >
        #{progress,jdbcType=INTEGER},
      </if>
      <if test="needBill != null" >
        #{needBill,jdbcType=INTEGER},
      </if>
      <if test="isPayed != null" >
        #{isPayed,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null" >
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        #{bak3,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ziling.www.po.ProjectExample" resultType="java.lang.Integer" >
    select count(*) from project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update project
    <set >
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectNum != null" >
        project_num = #{record.projectNum,jdbcType=VARCHAR},
      </if>
      <if test="record.projectName != null" >
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.acceptedTime != null" >
        accepted_time = #{record.acceptedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endedTime != null" >
        ended_time = #{record.endedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectStatus != null" >
        project_status = #{record.projectStatus,jdbcType=INTEGER},
      </if>
      <if test="record.budget != null" >
        budget = #{record.budget,jdbcType=INTEGER},
      </if>
      <if test="record.skillRequired != null" >
        skill_required = #{record.skillRequired,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryTime != null" >
        delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.developCycle != null" >
        develop_cycle = #{record.developCycle,jdbcType=INTEGER},
      </if>
      <if test="record.contactPeople != null" >
        contact_people = #{record.contactPeople,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl != null" >
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.depositMoney != null" >
        deposit_money = #{record.depositMoney,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.progress != null" >
        progress = #{record.progress,jdbcType=INTEGER},
      </if>
      <if test="record.needBill != null" >
        need_bill = #{record.needBill,jdbcType=INTEGER},
      </if>
      <if test="record.isPayed != null" >
        is_payed = #{record.isPayed,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.bak1 != null" >
        bak_1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null" >
        bak_2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null" >
        bak_3 = #{record.bak3,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update project
    set project_id = #{record.projectId,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=VARCHAR},
      project_num = #{record.projectNum,jdbcType=VARCHAR},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      accepted_time = #{record.acceptedTime,jdbcType=TIMESTAMP},
      ended_time = #{record.endedTime,jdbcType=TIMESTAMP},
      project_status = #{record.projectStatus,jdbcType=INTEGER},
      budget = #{record.budget,jdbcType=INTEGER},
      skill_required = #{record.skillRequired,jdbcType=VARCHAR},
      delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      develop_cycle = #{record.developCycle,jdbcType=INTEGER},
      contact_people = #{record.contactPeople,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      deposit_money = #{record.depositMoney,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      progress = #{record.progress,jdbcType=INTEGER},
      need_bill = #{record.needBill,jdbcType=INTEGER},
      is_payed = #{record.isPayed,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      bak_1 = #{record.bak1,jdbcType=VARCHAR},
      bak_2 = #{record.bak2,jdbcType=VARCHAR},
      bak_3 = #{record.bak3,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ziling.www.po.Project" >
    update project
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="projectNum != null" >
        project_num = #{projectNum,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptedTime != null" >
        accepted_time = #{acceptedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endedTime != null" >
        ended_time = #{endedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectStatus != null" >
        project_status = #{projectStatus,jdbcType=INTEGER},
      </if>
      <if test="budget != null" >
        budget = #{budget,jdbcType=INTEGER},
      </if>
      <if test="skillRequired != null" >
        skill_required = #{skillRequired,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTime != null" >
        delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="developCycle != null" >
        develop_cycle = #{developCycle,jdbcType=INTEGER},
      </if>
      <if test="contactPeople != null" >
        contact_people = #{contactPeople,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null" >
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="depositMoney != null" >
        deposit_money = #{depositMoney,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="progress != null" >
        progress = #{progress,jdbcType=INTEGER},
      </if>
      <if test="needBill != null" >
        need_bill = #{needBill,jdbcType=INTEGER},
      </if>
      <if test="isPayed != null" >
        is_payed = #{isPayed,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null" >
        bak_1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        bak_2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        bak_3 = #{bak3,jdbcType=INTEGER},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ziling.www.po.Project" >
    update project
    set company_id = #{companyId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=VARCHAR},
      project_num = #{projectNum,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      accepted_time = #{acceptedTime,jdbcType=TIMESTAMP},
      ended_time = #{endedTime,jdbcType=TIMESTAMP},
      project_status = #{projectStatus,jdbcType=INTEGER},
      budget = #{budget,jdbcType=INTEGER},
      skill_required = #{skillRequired,jdbcType=VARCHAR},
      delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      develop_cycle = #{developCycle,jdbcType=INTEGER},
      contact_people = #{contactPeople,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      deposit_money = #{depositMoney,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      progress = #{progress,jdbcType=INTEGER},
      need_bill = #{needBill,jdbcType=INTEGER},
      is_payed = #{isPayed,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      bak_1 = #{bak1,jdbcType=VARCHAR},
      bak_2 = #{bak2,jdbcType=VARCHAR},
      bak_3 = #{bak3,jdbcType=INTEGER}
    where project_id = #{projectId,jdbcType=VARCHAR}
  </update>
</mapper>