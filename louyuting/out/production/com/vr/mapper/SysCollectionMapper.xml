<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vr.mapper.SysCollectionMapper" >
  <resultMap id="BaseResultMap" type="com.vr.po.SysCollection" >
    <id column="collection_id" property="collectionId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="money" property="money" jdbcType="REAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="bak_1" property="bak1" jdbcType="VARCHAR" />
    <result column="bak_2" property="bak2" jdbcType="VARCHAR" />
    <result column="bak_3" property="bak3" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="netty.example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    collection_id, user_id, type_id, type, created_time, money, status, bak_1, bak_2, 
    bak_3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vr.po.SysCollectionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_collection
    where collection_id = #{collectionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_collection
    where collection_id = #{collectionId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.vr.po.SysCollectionExample" >
    delete from sys_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vr.po.SysCollection" >
    insert into sys_collection (collection_id, user_id, type_id, 
      type, created_time, money, 
      status, bak_1, bak_2, 
      bak_3)
    values (#{collectionId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{money,jdbcType=REAL}, 
      #{status,jdbcType=INTEGER}, #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR}, 
      #{bak3,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.vr.po.SysCollection" >
    insert into sys_collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="collectionId != null" >
        collection_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="bak1 != null" >
        bak_1,
      </if>
      <if test="bak2 != null" >
        bak_2,
      </if>
      <if test="bak3 != null" >
        bak_3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="collectionId != null" >
        #{collectionId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null" >
        #{money,jdbcType=REAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="bak1 != null" >
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        #{bak3,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vr.po.SysCollectionExample" resultType="java.lang.Integer" >
    select count(*) from sys_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_collection
    <set >
      <if test="record.collectionId != null" >
        collection_id = #{record.collectionId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=REAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.bak1 != null" >
        bak_1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null" >
        bak_2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null" >
        bak_3 = #{record.bak3,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_collection
    set collection_id = #{record.collectionId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      money = #{record.money,jdbcType=REAL},
      status = #{record.status,jdbcType=INTEGER},
      bak_1 = #{record.bak1,jdbcType=VARCHAR},
      bak_2 = #{record.bak2,jdbcType=VARCHAR},
      bak_3 = #{record.bak3,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vr.po.SysCollection" >
    update sys_collection
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=REAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="bak1 != null" >
        bak_1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        bak_2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        bak_3 = #{bak3,jdbcType=INTEGER},
      </if>
    </set>
    where collection_id = #{collectionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vr.po.SysCollection" >
    update sys_collection
    set user_id = #{userId,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=REAL},
      status = #{status,jdbcType=INTEGER},
      bak_1 = #{bak1,jdbcType=VARCHAR},
      bak_2 = #{bak2,jdbcType=VARCHAR},
      bak_3 = #{bak3,jdbcType=INTEGER}
    where collection_id = #{collectionId,jdbcType=VARCHAR}
  </update>
</mapper>